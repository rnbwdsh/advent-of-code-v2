#!/usr/bin/env python
# coding: utf-8

# In[15]:


get_ipython().run_cell_magic('script', 'pypy3',
                             '\nreg = [0, 0, 0, 0, 0, 0]\nIPADDR = 3\na = """seti 123 0 1\nbani 1 456 1\neqri 1 72 1\naddr 1 3 3\nseti 0 0 3\nseti 0 7 1\nbori 1 65536 4\nseti 3798839 3 1\nbani 4 255 5\naddr 1 5 1\nbani 1 16777215 1\nmuli 1 65899 1\nbani 1 16777215 1\ngtir 256 4 5\naddr 5 3 3\naddi 3 1 3\nseti 27 6 3\nseti 0 2 5\naddi 5 1 2\nmuli 2 256 2\ngtrr 2 4 2\naddr 2 3 3\naddi 3 1 3\nseti 25 3 3\naddi 5 1 5\nseti 17 1 3\nsetr 5 6 4\nseti 7 8 3\neqrr 1 0 5\naddr 5 3 3\nseti 5 6 3"""\nIPADDR = 3\ncode = ["seti", "setr", "addi", "addr", "muli", "mulr", "eqrr", "eqri", "gtrr", "gtir", "bani", "bori"]\na = [ aa.split() for aa in a.split("\\n")]\nfor i in range(len(a)):\n    a[i] = [code.index(a[i][0])] + list(map(int,a[i][1:]))\nprog = a\n\ndef debug():\n    print("regs:", reg)\n    print("before line", reg[IPADDR], code[instr], a, b, c)\n\nlastReg = -1\nregcs = []\n\nwhile reg[0] < len(prog):\n    instr, a, b, c = prog[reg[IPADDR]]\n\n    if instr == 0: #seti\n        reg[c] = a\n    elif instr == 1: #setr\n        reg[c] = reg[a]\n    elif instr == 2: #addi\n        reg[c] = reg[a] + b\n    elif instr == 3: #addr\n        reg[c] = reg[a] + reg[b]\n    elif instr == 4: #muli\n        reg[c] = reg[a] * b\n    elif instr == 5: #mulr\n        reg[c] = reg[a] * reg[b]\n    elif instr == 6:  #eqrr\n        reg[c] = int(reg[a] == reg[b])\n\n        # if your input is this number, you run the shortest\n        if lastReg < 0:\n            print("Solution 1", reg[1])\n\n        # if your input is this number, you run the longest\n        regcs.append(reg[1])\n        if regcs.count(reg[1]) == 2:\n            print("Solution 2:", lastReg)\n            break\n        lastReg = reg[1]\n\n    elif instr == 7: #eqri\n        reg[c] = int(reg[a] == b)\n    elif instr == 8: #gtrr\n        reg[c] = int(reg[a] > reg[b])\n    elif instr == 9: #gtir\n        reg[c] = int(a > reg[b])\n    elif instr == 10: #bani\n        reg[c] = int(reg[a] & b)\n    elif instr == 11: #bori\n        reg[c] = int(reg[a] | b)\n    else:\n        print("unknown instruction", instr)\n\n    reg[IPADDR] += 1\n\nreg[IPADDR]-=1\n#print("regs:", reg)\n')
