#!/usr/bin/env python
# coding: utf-8

# In[29]:


import copy

import numpy as np

demo = """.#.#...|#.
.....#|##|
.|..|...#.
..|#.....#
#.#|||#|#|
...#.||...
.|....|...
||...#|.#|
|.||||..|.
...#.|..|."""
a = """.#|#.##....#|....|.#.#.|||.#.|....||....|...|..#..
..|#||.|#..|...|#|..#...|#...#..#..|.....||..#.|#.
#|||#..||.....||.#................|..#.##|.#...#.|
|#..#.|...##...#..#|#|#..|#.#...|....#..#...##....
.###.........|.||#...#|.|#.||||#..|...||....#..#..
###.|..|#|...|..||..##.....|..#.|.#.............|.
..|.|.||.#....|...|....#|.........##||..#||..|.##.
#||#|...#|..|.|.||#...#|...|#.......|...#.....|...
....||.....|.|.....#...|.......|...|..|...|......|
#......#..#|#|..|....#.|.|.#...#.#.|..#.|.....#.#.
.|#...|...........#|.#....#.#...#.|..|...|....|.|.
..||.#.|...||#|....#.#..||#..#...#|..#..|..#|.....
|..|.|..#...|.....#.|..|#.||..#|.|.||#|#..|#...##|
..|..|#......||##..|........#.|...#.|.|#.#...||..#
#.|...#.||#..|.|..|..|.#....|.||....|.|....#....#.
#||.|.#..#..|...#....##|#..#...#.#...|.#...#.....#
#.|.##.|##..#.##|##........#.|...#...|..#|.#|#|...
.|#|....|.#...#..|||.#.||..#||.||.|..#.|....|..##.
|.#.||#|.##.|.||.....#...#.#..###|.#......||#|....
.|.#..|#||......|##..##.#|..#|.|#.|.|#......|#.|#.
#..|........|||..|###..|#..|||#.|.|.....#|..|...|#
..####||#......|#||..###.|...|....#..|.#|.||....||
|##.......|||..........|..||.#.|#.......##...|...|
|.......#......####|#|....#....|......#.|#.###...#
#|.#.|||...|..|.....#....|...|......|#|#|......||.
...#.|......#..||||.#|.....|.|.|||.|.|.|#|.#...#.#
#.#.##.|.#|.|...|...|...#|...#.|#..|..##.|....#..|
|...#.......#....#....#.#....#.#|.|#||.|.|.|#...#.
#..|.||..|.#..|.#.....#|##.|.|....|....||.......|.
..||.#..|#|.###....#.#|..#|.#..........#...|...#|.
|#||.|.#..|....|....#.#||#.|......#..|#.#.|||||#|.
.|#.|#.##.....#.|.#.....|....|.#..#.#..|#.#.....|.
#.||.#.......|..|......|#||.|..#....#...|...|...|.
|.....#.|.....#||.....##...#.#...||.|..#........|.
||#..|.##.#...........#..|..|.|..#....|...#..||.#.
..||.##.##.|.||......#...|.#.#.#..#.#...##.#.|.#..
.|.#......#|#||.|.#|......||.#.|.|..|....#...||...
....|.##.....|#|####.#..#..#|.....|.#.#|......|...
...#..|......#....|#.#...|...|.#.#.......#.#.##..#
.|||#.||||...|..|#||.|.#|#||..|..#..|..|..#||.....
.....|..#..|#|.||.#||.||......|||..|..#|.|##......
.#...#|..#..|||..||.|..|.#.#.......||..|...|.|....
.##.||..|..||.|.......#.|||.|.|..|.#.#..|.||.|#|||
.|..##|..#.#|#|....|.#.#.#|#.#|.##|........###...#
..#..|#|...#.........#.#.####..#.#..#..#||#|...#|#
#.|...|.......|.#.#..#.|#..#|#|..#..|.....|..|...|
.##.|..#.....|...#..|#..|.|.#..##.#.|..#.|..|.##..
....|..|.|..||....|...|.....#..|.|.....|.#|......#
...##.|#..#..|.#|.##....|.#...||#|.....#...##.#|..
.|....##.....||...#.#.....#|#...#...#|.|..#.#.#.##"""
b = np.array([list(aa) for aa in a.split("\n")])
print(b)

OPEN, TREE, LUMB = '.', '|', '#'

for i in range(2820):  # circle detected after 28, so 1000000000 == 20, and it takes around 1k to stabilize
    c = copy.deepcopy(b)
    for y in range(len(c)):
        for x in range(len(c[0])):
            x1 = max(x - 1, 0)
            x2 = min(x + 2, len(c[0]))
            y1 = max(y - 1, 0)
            y2 = min(y + 2, len(c))
            subfield = b[y1:y2, x1:x2]
            val = b[y, x]
            # An open acre will become filled with trees if 
            # three or more adjacent acres contained trees. 
            # Otherwise, nothing happens.
            if val == OPEN and np.sum(subfield == TREE) >= 3:
                c[y, x] = TREE
            # An acre filled with trees will become a lumberyard if three 
            # or more adjacent acres were lumberyards. 
            # Otherwise, nothing happens.
            elif val == TREE and np.sum(subfield == LUMB) >= 3:
                c[y, x] = LUMB
            # An acre containing a lumberyard will remain a lumberyard
            # if it was adjacent to at least one other lumberyard and 
            # at least one acre containing trees. 
            # Otherwise, it becomes open.
            elif val == LUMB:
                # 1 lumb is given by the field itself
                if np.sum(subfield == LUMB) >= 2 and np.sum(subfield == TREE) >= 1:
                    c[y, x] = LUMB
                else:
                    c[y, x] = OPEN

            # print(x1,x2,y1,y2,val,"\n",subfield,c[y,x])
    b = c
    # print()
    # print(b)
    endlumb = np.sum(b == LUMB)
    endtree = np.sum(b == TREE)
    print(i, endlumb, endtree, endlumb * endtree)

# In[ ]:
